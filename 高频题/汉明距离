题目：
两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。

给你两个整数 x 和 y，计算并返回它们之间的汉明距离。

代码：
class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        
        #两个整数 位异或运算后 为1的位置就是不同的位置 求1的数量就可以了 
        #求的办法就是n&(n-1)一直到为0为止  每次n&(n-1)都会减少一个1
        tmp = (x ^ y)
        # print(tmp)
        res = 0
        while tmp > 0:
            tmp &= (tmp - 1)
            res += 1
        return res

理解：
一个是位异或 一个是位与  两个运算有不同的作用 同时注意两个数是整数 不是二进制的字符串
