题目：
给两个整数数组 nums1 和 nums2 ，返回 两个数组中 公共的 、长度最长的子数组的长度 。

代码：
class Solution:
    def findLength(self, nums1: List[int], nums2: List[int]) -> int:
        dp = [[0 for _ in range(len(nums2)+1)] for _ in range(len(nums1)+1)]
        result = 0
        for i in range(1, len(nums1)+1):
            for j in range(1, len(nums2)+1):
                if nums1[i-1] == nums2[j-1]:  #为什么是两个序列前一位作对比？ 可以通过从0开始遍历来解释  nums[0]的时候对应dp[0] 而这时候得到的是dp[1] 因此dp[i]只能跟nums[i-1]进行对应
                    dp[i][j] = dp[i-1][j-1] + 1
                result = max(result, dp[i][j])
        return result

理解：
主要是nums[i-1]和dp[i]对应的理解 写在了注释里
