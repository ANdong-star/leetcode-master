题目：
给你一个整数 n ，返回 和为 n 的完全平方数的最少数量 。

完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，1、4、9 和 16 都是完全平方数，而 3 和 11 不是。

示例 1：
输入：n = 12
输出：3 
解释：12 = 4 + 4 + 4

示例 2：
输入：n = 13
输出：2
解释：13 = 4 + 9

代码：
class Solution:
    def numSquares(self, n: int) -> int:
        dp = [n+1] * (n + 1)
        dp[0] = 0
        for i in range(1, n+1):
            if i**2 > n:
                break
            for j in range(i**2, n+1):
                dp[j] = min(dp[j], dp[j-i**2]+1)
        return dp[n] 

理解：
主要是完全平方数看是石头  完全平方数取哪些 就是遍历 一个一个取平方 平方超了n就是到头了
