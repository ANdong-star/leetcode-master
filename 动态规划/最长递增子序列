题目：
给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。

子序列 是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。

代码：
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        dp = [1] * len(nums)
        result = 1
        for i in range(1, len(nums)):
            for j in range(0, i):
                if nums[j] < nums[i]:
                   dp[i] = max(dp[i], dp[j] + 1)  #遇到可以接的就接上
            result = max(result, dp[i])  #这个目的是从0到i 其中最长的一段递增子序列 而不是选择以nums[i]作为序列结尾最长的递增子序列
        return result

理解：
主要是递推公式的理解和result变量的更新 最后输出的是result而不是dp数组的最后一个元素
