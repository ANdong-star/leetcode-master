题目：
给定一个循环数组 nums （ nums[nums.length - 1] 的下一个元素是 nums[0] ），返回 nums 中每个元素的 下一个更大元素 。

数字 x 的 下一个更大的元素 是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 -1 。

代码：
class Solution:
    def nextGreaterElements(self, nums: List[int]) -> List[int]:
        result = [-1] * len(nums)
        stack = [0]
        for i in range(1, len(nums)*2):
            if nums[i%len(nums)] <= nums[stack[-1]]:
                stack.append(i%len(nums))
            else:
                while len(stack) != 0 and nums[i%len(nums)] > nums[stack[-1]]:
                    result[stack[-1]] = nums[i%len(nums)]
                    stack.pop()
                stack.append(i%len(nums))
        return result

理解：
每日温度的递进升级版 还是得到更大的元素 但是变成了环形数组 此时遍历两遍数组就可以得到所有的result
