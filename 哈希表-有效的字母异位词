题目：

给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。

示例 1: 输入: s = "anagram", t = "nagaram" 输出: true

示例 2: 输入: s = "rat", t = "car" 输出: false

说明: 你可以假设字符串只包含小写字母。


代码：
class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        record = [0] * 26
        for i in range(len(s)):
            #并不需要记住字符a的ASCII，只要求出一个相对数值就可以了
            record[ord(s[i]) - ord('a')] += 1 #leetcode上要用单引号
        print(record)
        for i in range(len(t)):
            record[ord(t[i]) - ord('a')] -= 1
        for i in range(26):    
            if record[i] != 0:
                #record数组如果有的元素不为零0，说明字符串s和t 一定是谁多了字符或者谁少了字符。
                return False  #False 第一个字母大写
        return True
理解：
建立哈希表(用数组表示) 键对应字母  值对应字母出现的次数 先加后减
