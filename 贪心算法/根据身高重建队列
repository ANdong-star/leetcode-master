题目：
假设有打乱顺序的一群人站成一个队列，数组 people 表示队列中一些人的属性（不一定按顺序）。每个 people[i] = [hi, ki] 表示第 i 个人的身高为 hi ，前面 正好 有 ki 个身高大于或等于 hi 的人。

请你重新构造并返回输入数组 people 所表示的队列。返回的队列应该格式化为数组 queue ，其中 queue[j] = [hj, kj] 是队列中第 j 个人的属性（queue[0] 是排在队列前面的人）。

代码：
class Solution:
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        people.sort(key = lambda x: (-x[0], x[1]))
        results = []
        for person in people:
            results.insert(person[1], person)
        return results

理解：
首先按照身高从大到小进行排列 遇到身高一样的前面人数少的排在前面
难理解的就是之后的插入操作：
这时候按照顺序进行插入 前面有多少人就是插入的索引 为什么这么做呢？
因为插入一个person的时候 前面全都是比他高的已经插完了并且排完了顺序 所以这个person插的时候 必须要插在对应的索引上才可以 此person的插入不会影响后面比它高的那个元素的k值
