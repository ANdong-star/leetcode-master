题目：
给定一个整数数组 prices，其中第 i 个元素代表了第 i 天的股票价格 ；整数 fee 代表了交易股票的手续费用。

你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。

返回获得利润的最大值。

注意：这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。

代码：
class Solution:
    def maxProfit(self, prices: List[int], fee: int) -> int:
        result = 0
        minprice = prices[0]
        for i in range(1, len(prices)):
            if prices[i] <= minprice:
                minprice = prices[i]
            elif prices[i] > minprice and prices[i] <= minprice + fee:
                continue
            else:
                result += prices[i] - minprice - fee
                minprice = prices[i] - fee  #这个操作很巧妙 对于三种情况都可以适应 要记住
        return result   

理解：
if elif else 要把所有情况都包含 所以写判断语句的时候要细心 
本题 刚开始把price[i] == minprice 交给else处理了
