题目：
给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：

左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。
示例 1:

输入: "()"
输出: true
示例 2:

输入: "()[]{}"
输出: true
示例 3:

输入: "(]"
输出: false
示例 4:

输入: "([)]"
输出: false
示例 5:

输入: "{[]}"
输出: true

代码：
class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        for items in s:
            if items == '(':
                stack.append(')')
            elif items == '[':
                stack.append(']')
            elif items == '{':
                stack.append('}')
            elif not stack or stack[-1] != items:
                return False 
            else:
                stack.pop()

        return True if not stack else False

理解：
对称匹配类的题目  适合用栈来解决 
从左往右移动 遇到左边的括号则将对应的右括号放入栈 
遇到右括号则弹出栈

False的情况  要弹出栈时两个右括号不一样  要弹出栈时栈内没元素了  字符串扫完之后栈内还有元素 
Ture的情况  字符串扫完 栈空
