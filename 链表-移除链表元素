题意：删除链表中等于给定值 val 的所有节点。

示例 1：
输入：head = [1,2,6,3,4,5,6], val = 6
输出：[1,2,3,4,5]

示例 2：
输入：head = [], val = 1
输出：[]

示例 3：
输入：head = [7,7,7,7], val = 7
输出：[]

代码：
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeElements(self, head: ListNode, val: int) -> ListNode:
        dummy_head = ListNode(next=head) #添加一个虚拟节点
        cur = dummy_head
        while(cur.next!=None):
            if(cur.next.val == val):
                cur.next = cur.next.next #删除cur.next节点
            else:
                cur = cur.next
        return dummy_head.next

理解：
关于内存释放，C++需要养成移除链表元素后释放内存的好习惯，java和python有自动的内存回收机制，可以不需要手动释放内存。
关于处理逻辑，移除链表元素就是将所移除元素前一个元素的指针指向下一个元素的数据。 对于头结点，处理逻辑有差别，即直接将下一个元素作为头结点。 因此，可以通过设置虚拟头的方式制定统一逻辑，
头结点和其他链表元素按照一个逻辑进行删除。
