题目：
给定一棵树的前序遍历 preorder 与中序遍历  inorder。请构造二叉树并返回其根节点。

代码：
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        if not preorder:
            return None
        
        pre_val = preorder[0]
        root = TreeNode(val = pre_val)

        pre_val_index = inorder.index(pre_val)

        pre_inorder = inorder[:pre_val_index]
        post_inorder = inorder[pre_val_index + 1:]

        pre_preorder = preorder[1:len(pre_inorder) + 1]
        post_preorder = preorder[len(pre_inorder) + 1:]

        root.left = self.buildTree(pre_preorder, pre_inorder)
        root.right = self.buildTree(post_preorder, post_inorder)
        return root
        
理解：
相似题目 注意切片操作的前后取值
