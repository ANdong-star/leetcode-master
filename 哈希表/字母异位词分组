题目：
给你一个字符串数组，请你将 字母异位词 组合在一起。可以按任意顺序返回结果列表。

字母异位词 是由重新排列源单词的字母得到的一个新单词，所有源单词中的字母通常恰好只用一次。

代码：
class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        # 利用哈希表 建立一个字典 键是字符串各个字母出现的频率(数组) 值是字符串列表(也是数组) 所以要选数据结构 
        ans_map = collections.defaultdict(list)  #可以建立值为list的dict
        for str_ in strs:
            tmp = [0] * 26
            #存储每个字符串的各个字母出现的频率
            for i in str_:
                tmp[ord(i) - ord('a')] += 1
            #用dict的话  键没法是list 值可以是list 
            ans_map[tuple(tmp)].append(str_)   #这句话很重要 将list类型数据tmp转为tuple数据类型
        return list(ans_map.values())  #要把所有的list 值 转为一个大的list 直接输出的话会报错

理解：
首先判断本题的解决方式为用元组的方式解决 键与值都是列表的形式 
